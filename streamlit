import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
st.set_page_config(page_title="Diabetes Dataset Visualization", layout="wide")
st.title("🩺 Diabetes Dataset Visualization using Streamlit")
st.sidebar.header("📂 Upload Diabetes CSV File")
uploaded_file = st.sidebar.file_uploader("Upload a CSV File", type=["csv"])
if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    st.success("✅ File Uploaded Successfully")

    st.subheader("📄 Dataset Preview")
    st.dataframe(df.head(), use_container_width=True)
    st.write("**Shape of dataset:**", df.shape)
    st.write("**Columns:**", list(df.columns))

    st.sidebar.header("📊 Visualization Options")
    numeric_cols = df.select_dtypes(include=["int64", "float64"]).columns.tolist()

    if len(numeric_cols) >= 2:
        x_col = st.sidebar.selectbox("Select X-axis", numeric_cols)
        y_col = st.sidebar.selectbox("Select Y-axis", numeric_cols)
        chart_type = st.sidebar.radio(
            "Select Chart Type",
            ["Line Chart", "Bar Chart", "Scatter Plot", "Histogram", "Box Plot"]
        )

        st.subheader(f"{chart_type} of {y_col} vs {x_col}")
        fig, ax = plt.subplots()
        if chart_type == "Line Chart":
            ax.plot(df[x_col], df[y_col], color='teal')
        elif chart_type == "Bar Chart":
            df_sample = df[[x_col, y_col]].dropna().head(50)
            ax.bar(df_sample[x_col].astype(str), df_sample[y_col], color='orange')
            ax.tick_params(axis='x', rotation=45)
        elif chart_type == "Scatter Plot":
            ax.scatter(df[x_col], df[y_col], color='purple', alpha=0.6)
        elif chart_type == "Histogram":
            ax.hist(df[y_col], bins=20, color='skyblue', edgecolor='black')
        elif chart_type == "Box Plot":
            Q1 = df[y_col].quantile(0.25)
            Q3 = df[y_col].quantile(0.75)
            IQR = Q3 - Q1
            lower_bound = Q1 - 1.5 * IQR
            upper_bound = Q3 + 1.5 * IQR
            df_no_outliers = df[(df[y_col] >= lower_bound) & (df[y_col] <= upper_bound)]

            ax.boxplot(df_no_outliers[y_col], patch_artist=True,
                       boxprops=dict(facecolor='lightgreen'))
            ax.set_title(f"📦 Box Plot of {y_col} (Outliers Removed)")

        ax.set_xlabel(x_col)
        ax.set_ylabel(y_col)
        ax.grid(True, linestyle='--', alpha=0.5)
        st.pyplot(fig)

    else:
        st.warning("⚠️ Please upload a dataset with at least two numeric columns.")
else:
    st.info("📤 Please upload your Diabetes CSV file to begin visualization.")
